{"version":3,"file":"extension.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yEAAiC;AACjC,MAAM,EAAE,GAAG,mBAAO,CAAC,cAAI,CAAC,CAAC;AAEzB,SAAgB,QAAQ,CAAC,OAAgC;IACxD,OAAO,CAAC,GAAG,CAAC,6DAA6D,CAAC,CAAC;IAE3E,IAAI,SAAS,GAA8B,EAAE,CAAC;IAC9C,IAAI,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,CAAC;QACrC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,WAAW,CAAC,GAAG,EAAE;QAChB,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,QAAQ,CAAC,UAAU,IAAI,EAAE,CAAC;QAElF,IAAI,SAAS,CAAC,eAAe,CAAC,EAAE,CAAC;YAChC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;aAAM,CAAC;YACP,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;QAED,MAAM,aAAa,GAAG,CAAC,OAAe,EAAE,EAAE;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YACzC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YACvC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;YAEpC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QACjC,CAAC,CAAC;QAEF,MAAM,IAAI,GAAG,aAAa,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QACvD,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,qBAAqB,eAAe,iBAAiB,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,OAAO,UAAU,CAAC,CAAC;QAC1J,EAAE,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/D,CAAC,EAAE,IAAI,CAAC,CAAC;AACV,CAAC;AA7BD,4BA6BC;AAED,SAAgB,UAAU,KAAI,CAAC;AAA/B,gCAA+B;;;;;;;;;;;AClC/B;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":[".././src/extension.ts","../external commonjs \"vscode\"","../external commonjs2 \"fs\"","../webpack/bootstrap","../webpack/before-startup","../webpack/startup","../webpack/after-startup"],"sourcesContent":["import * as vscode from 'vscode';\nconst fs = require('fs');\n\nexport function activate(context: vscode.ExtensionContext) {\n\tconsole.log('Congratulations, your extension \"helloworld\" is now active!');\n\n\tlet languages: { [key: string]: number } = {};\n\tif (fs.existsSync('languages.json')) {\n\t\tlanguages = JSON.parse(fs.readFileSync('languages.json'));\n\t}\n\n\tsetInterval(() => {\n\t\tconst currentLanguage = vscode.window.activeTextEditor?.document.languageId ?? '';\n\n\t\tif (languages[currentLanguage]) {\n\t\t\tlanguages[currentLanguage] += 5;\n\t\t} else {\n\t\t\tlanguages[currentLanguage] = 5;\n\t\t}\n\n\t\tconst calculateTime = (seconds: number) => {\n\t\t\tconst minutes = Math.floor(seconds / 60);\n\t\t\tconst hours = Math.floor(minutes / 60);\n\t\t\tconst days = Math.floor(hours / 24);\n\n\t\t\treturn { minutes, hours, days };\n\t\t};\n\n\t\tconst time = calculateTime(languages[currentLanguage]);\n\t\tvscode.window.showInformationMessage(`Current language: ${currentLanguage}, Time spent: ${time.days} days, ${time.hours} hours, ${time.minutes} minutes`);\n\t\tfs.writeFileSync('languages.json', JSON.stringify(languages));\n\t}, 5000);\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/extension.ts\");\n",""],"names":[],"sourceRoot":""}