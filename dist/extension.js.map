{"version":3,"file":"extension.js","mappings":"swBAAA,kBACMA,EAAK,EAAQ,IAEnB,oBAAyBC,GACxBC,QAAQC,IAAI,+DAEZ,IAAIC,EAAuC,CAAC,EACxCJ,EAAGK,WAAW,oBACjBD,EAAYE,KAAKC,MAAMP,EAAGQ,aAAa,oBAExC,IAAIC,EAAU,GAGdC,aAAY,KACX,MAAMC,EAAkBC,EAAOC,OAAOC,kBAAkBC,SAASC,YAAc,GAE/E,GAAwB,KAApBL,EAAwB,CACvBP,EAAUO,GACbP,EAAUO,IAAoB,EAE9BP,EAAUO,GAAmB,EAG9B,MAAMM,EAAQC,KAAKC,MAAOf,EAAUO,GAAmB,KAAQ,IAAM,GAEjEF,IADM,GAAGE,MAAoBM,OAEhCR,EAAU,GAAGE,MAAoBM,KACjCL,EAAOC,OAAOO,uBAAuBX,IAEtCT,EAAGqB,cAAc,iBAAkBf,KAAKgB,UAAUlB,GACnD,IACE,IACJ,EAEA,wBAA8B,C,UClC9BmB,EAAOC,QAAUC,QAAQ,S,SCAzBF,EAAOC,QAAUC,QAAQ,K,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":[".././src/extension.ts","../external commonjs \"vscode\"","../external commonjs2 \"fs\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nconst fs = require('fs');\n\nexport function activate(context: vscode.ExtensionContext) {\n\tconsole.log('Congratulations, your extension \"helloworld\" is now active!');\n\n\tlet languages: { [key: string]: number } = {};\n\tif (fs.existsSync('languages.json')) {\n\t\tlanguages = JSON.parse(fs.readFileSync('languages.json'));\n\t}\n\tvar oldText = \"\";\n\tvar newText = \"\";\n\n\tsetInterval(() => {\n\t\tconst currentLanguage = vscode.window.activeTextEditor?.document.languageId ?? '';\n\n\t\tif (currentLanguage !== '') {\n\t\t\tif (languages[currentLanguage]) {\n\t\t\t\tlanguages[currentLanguage] += 2;\n\t\t\t} else {\n\t\t\t\tlanguages[currentLanguage] = 2;\n\t\t\t}\n\t\n\t\t\tconst hours = Math.round((languages[currentLanguage] / 3600) * 10) / 10;\n\t\t\tnewText = `${currentLanguage}: ${hours}h`\n\t\t\tif (oldText !== newText) {\n\t\t\t\toldText = `${currentLanguage}: ${hours}h`\n\t\t\t\tvscode.window.showInformationMessage(oldText);\n\t\t\t}\n\t\t\tfs.writeFileSync('languages.json', JSON.stringify(languages));\n\t\t}\n\t}, 2000);\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["fs","context","console","log","languages","existsSync","JSON","parse","readFileSync","oldText","setInterval","currentLanguage","vscode","window","activeTextEditor","document","languageId","hours","Math","round","showInformationMessage","writeFileSync","stringify","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}